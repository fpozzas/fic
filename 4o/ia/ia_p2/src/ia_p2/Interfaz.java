package ia_p2;

import java.util.ArrayList;
import java.util.Random;

import java.io.*;

public class Interfaz extends javax.swing.JFrame {
    public static Nodo I;
    public static Nodo O;
    public static Nodo F;
    public static int ntabu;
    public static ArrayList<Nodo> tabu = new ArrayList<Nodo>();
    public static boolean waitOK = false;

    public void metAnchura(){
        textSalida.append("######################\n");
        textSalida.append("Busqueda por anchura\n");
        textSalida.append("######################\n");
        Anchura a = new Anchura(I,O);
        int exito;
        if ((exito=a.init())>=0) F = a.F;
        else {
            int i=0;
            while ((exito=a.paso())!=1){
                if (exito<0){
                    textSalida.append("No se ha encontrado solución");
                    return;
                }
                i++;
                textSalida.append("No. iteraccion = "+ i+ "\nAbiertos = " + a.abiertos + "\n");
            }
        }
        if (exito>=0){
            F = a.F;
            textSalida.append("###########\nRESULTADOS:\n");
            textSalida.append("Iteraciones = " + a.iteraciones  + "\n");
            textSalida.append("No. tests de meta = " + a.ntests  + "\n");
            textSalida.append("Camino: \n");
            ArrayList<Nodo> camino = new ArrayList<Nodo>();
            while (F!=null){
                camino.add(F);
                F = F.getPadre();
            }
            while (!camino.isEmpty())
                textSalida.append(camino.remove(camino.size()-1) + "\n");
        }
    }
    public void metColinas(Heuristica h){
        textSalida.append("###########################\n");
        textSalida.append("Ascensión de colinas simple\n");
        textSalida.append("Heurística: "+h+"\n");
        textSalida.append("###########################\n");
        Colinas c = new Colinas(I,O,h);

        int exito;
        int i=0;
        while ((exito=c.paso())!=1){
            i++;
            if (exito<0){
                textSalida.append("No se ha encontrado solución");
                return;
            }
            textSalida.append("Camino actual = "+ c.camino+"\n");
            textSalida.append("\nNo. iteraccion = "+ i+"\n");
            textSalida.append("Posibles descendientes= "+c.descendientes+"\n");
            textSalida.append("Mejor nodo ="+c.N+"\n");
        }
        if (exito>=0){
            F = c.F;
            textSalida.append("###########\nRESULTADOS:\n");
            textSalida.append("No. tests de meta = " + c.ntests  + "\n");
            textSalida.append("Camino: \n");
            for (Nodo n : c.camino)
                textSalida.append(n+"\n");
        }
    }

    public void metAsterisco(Heuristica h){
        textSalida.append("############\n");
        textSalida.append("Algoritmo A* \n");
        textSalida.append("Heurística: "+h+"\n");
        textSalida.append("############\n");
        Asterisco ast = new Asterisco(I,O,h);
        int exito;
        int i=0;
        while ((exito=ast.paso())!=1){
            i++;
            if (exito<0){
                textSalida.append("No se ha encontrado solución");
                return;
            }
            textSalida.append("\nNo. iteración: "+i+"\n");
            textSalida.append("Lista de Abiertos = " +ast.abiertos+"\n");
            textSalida.append("Mejor nodo = " +ast.mn+"\n");
            textSalida.append("Camino actual = "+ ast.camino+"\n");
            textSalida.append("Nuevos descendientes = "+ ast.descendientes+"\n");
        }
        if (exito>=0){
            F = ast.F;
            textSalida.append("###########\nRESULTADOS:\n");
            textSalida.append("No. tests de meta = " + ast.ntests  + "\n");
            textSalida.append("Camino: \n");
            for (Nodo n : ast.camino)
                textSalida.append(n+"\n");
        }
    }

    public void tabuFichero(String path) {
        File fich = new File(path);
        try {
            BufferedReader input =  new BufferedReader(new FileReader(fich));
            String linea;
            while (( linea = input.readLine()) != null)
                if (!linea.equals(""))
                    tabu.add(new Nodo(Integer.parseInt(linea)));
            input.close();
        } catch (IOException e) {
            textSalida.append("Error al leer fichero de números prohibidos\n");
        }
}

    /** Creates new form Interfaz */
    public Interfaz() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rgroupBusquedas = new javax.swing.ButtonGroup();
        rgroupTabu = new javax.swing.ButtonGroup();
        rgroupHeuristicas = new javax.swing.ButtonGroup();
        tboxInicial = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tboxFinal = new javax.swing.JTextField();
        radioAnchura = new javax.swing.JRadioButton();
        radioColinas = new javax.swing.JRadioButton();
        radioAsterisco = new javax.swing.JRadioButton();
        radioNoTabu = new javax.swing.JRadioButton();
        radioTabuAleat = new javax.swing.JRadioButton();
        radioTabuKb = new javax.swing.JRadioButton();
        tboxAleat = new javax.swing.JTextField();
        radioTabuFich = new javax.swing.JRadioButton();
        tboxRuta = new javax.swing.JTextField();
        tboxTeclado = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textSalida = new javax.swing.JTextArea();
        buttonOK = new javax.swing.JButton();
        radioHd = new javax.swing.JRadioButton();
        radioHi = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Práctica 2 de Inteligencia Artificial");

        tboxInicial.setText("000");
        tboxInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tboxInicialActionPerformed(evt);
            }
        });

        jLabel1.setText("Nodo inicial");

        jLabel2.setText("Nodo final");

        tboxFinal.setText("111");
        tboxFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tboxFinalActionPerformed(evt);
            }
        });

        rgroupBusquedas.add(radioAnchura);
        radioAnchura.setSelected(true);
        radioAnchura.setText("Anchura");
        radioAnchura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAnchuraActionPerformed(evt);
            }
        });

        rgroupBusquedas.add(radioColinas);
        radioColinas.setText("Colinas");
        radioColinas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioColinasActionPerformed(evt);
            }
        });

        rgroupBusquedas.add(radioAsterisco);
        radioAsterisco.setText("A*");
        radioAsterisco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioAsteriscoActionPerformed(evt);
            }
        });

        rgroupTabu.add(radioNoTabu);
        radioNoTabu.setSelected(true);
        radioNoTabu.setText("Sin números tabu");

        rgroupTabu.add(radioTabuAleat);
        radioTabuAleat.setText("Nºs tabu aleatorios");

        rgroupTabu.add(radioTabuKb);
        radioTabuKb.setText("Desde teclado");

        tboxAleat.setText("0");

        rgroupTabu.add(radioTabuFich);
        radioTabuFich.setText("Desde fichero");

        tboxRuta.setText("/Users/dani/tabu.txt");
        tboxRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tboxRutaActionPerformed(evt);
            }
        });

        tboxTeclado.setText("222,333,444");

        textSalida.setColumns(20);
        textSalida.setRows(5);
        jScrollPane1.setViewportView(textSalida);

        buttonOK.setText("Comenzar");
        buttonOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonOKMouseClicked(evt);
            }
        });

        rgroupHeuristicas.add(radioHd);
        radioHd.setSelected(true);
        radioHd.setText("Heurística de las distancias");

        rgroupHeuristicas.add(radioHi);
        radioHi.setText("Heurística dígitos incorrectos");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(layout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(jLabel2)))
                        .add(15, 15, 15)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(tboxFinal)
                            .add(tboxInicial, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(55, 55, 55)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(radioAsterisco, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(radioColinas, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(radioAnchura))))
                .add(28, 28, 28)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(radioHi)
                                .add(75, 75, 75)
                                .add(buttonOK))
                            .add(radioHd)))
                    .add(layout.createSequentialGroup()
                        .add(48, 48, 48)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(radioNoTabu)
                            .add(layout.createSequentialGroup()
                                .add(radioTabuAleat)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(tboxAleat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(layout.createSequentialGroup()
                                    .add(radioTabuKb)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(tboxTeclado))
                                .add(layout.createSequentialGroup()
                                    .add(radioTabuFich)
                                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                    .add(tboxRuta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                .add(135, 135, 135))
            .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 841, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(tboxInicial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel1))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(tboxFinal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel2))
                                .add(18, 18, 18)
                                .add(radioAnchura)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(radioColinas)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(radioAsterisco)
                                .add(22, 22, 22)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(radioHi)
                                    .add(buttonOK)))
                            .add(layout.createSequentialGroup()
                                .add(145, 145, 145)
                                .add(radioHd)))
                        .add(18, 18, 18)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(radioNoTabu)
                            .add(layout.createSequentialGroup()
                                .add(27, 27, 27)
                                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(radioTabuAleat)
                                    .add(tboxAleat, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(radioTabuKb)
                            .add(tboxTeclado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(radioTabuFich)
                            .add(tboxRuta, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tboxInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tboxInicialActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tboxInicialActionPerformed

    private void tboxFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tboxFinalActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tboxFinalActionPerformed

    private void radioAnchuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAnchuraActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_radioAnchuraActionPerformed

    private void radioColinasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioColinasActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_radioColinasActionPerformed

    private void radioAsteriscoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioAsteriscoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_radioAsteriscoActionPerformed

    private void tboxRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tboxRutaActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_tboxRutaActionPerformed

    private void buttonOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonOKMouseClicked
        textSalida.setText("");
        tabu.clear();
        I = new Nodo(Integer.parseInt(tboxInicial.getText()));
        O = new Nodo(Integer.parseInt(tboxFinal.getText()));
        /// Código usado para la comparativa de las heurísticas
        /*
        Heuristica hi = new Heuristica("i");
        Heuristica hd = new Heuristica("d");
        Random mmm = new Random();
        Nodo prueba = (new Nodo((int)(mmm.nextDouble() * 1000.0)));
        System.out.println("Nodo I="+prueba);
        System.out.println("Heuristica incorrecta ="+hi.calc(prueba, new Nodo(999)));
        System.out.println("Heuristica distancia ="+hd.calc(prueba,new Nodo(999)));
         * */
        ///////////////////////
        textSalida.append("###############\nDATOS INICIALES:\n");
        textSalida.append("Nodo Inicial(I) = " + I + "\nNodo Final(O) = " + O + "\n");
        // Opciones de numeros tabu
        if (radioTabuAleat.isSelected()){
            ntabu = Integer.parseInt(tboxAleat.getText());
            Random rnd = new Random();
            for (int i=0;i<ntabu;i++){
                tabu.add(new Nodo((int)(rnd.nextDouble() * 1000.0)));
            }
        }
        else if (radioTabuKb.isSelected()){
            String s = tboxTeclado.getText();
            String [] ss = s.split(",");
            for (String t : ss) tabu.add(new Nodo(Integer.parseInt(t)));
        }
        else if (radioTabuFich.isSelected()) tabuFichero(tboxRuta.getText());
        textSalida.append("Numeros Tabu = " + tabu.toString()  + "\n" );
        // Selección de método
        Heuristica h;
        if (radioHi.isSelected()) h = new Heuristica("i");
        else h = new Heuristica("d");

        if (radioAnchura.isSelected()) this.metAnchura();
        else if (radioColinas.isSelected()) this.metColinas(h);
        else if (radioAsterisco.isSelected()) this.metAsterisco(h);
    }//GEN-LAST:event_buttonOKMouseClicked
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioAnchura;
    private javax.swing.JRadioButton radioAsterisco;
    private javax.swing.JRadioButton radioColinas;
    private javax.swing.JRadioButton radioHd;
    private javax.swing.JRadioButton radioHi;
    private javax.swing.JRadioButton radioNoTabu;
    private javax.swing.JRadioButton radioTabuAleat;
    private javax.swing.JRadioButton radioTabuFich;
    private javax.swing.JRadioButton radioTabuKb;
    private javax.swing.ButtonGroup rgroupBusquedas;
    private javax.swing.ButtonGroup rgroupHeuristicas;
    private javax.swing.ButtonGroup rgroupTabu;
    private javax.swing.JTextField tboxAleat;
    private javax.swing.JTextField tboxFinal;
    private javax.swing.JTextField tboxInicial;
    private javax.swing.JTextField tboxRuta;
    private javax.swing.JTextField tboxTeclado;
    private javax.swing.JTextArea textSalida;
    // End of variables declaration//GEN-END:variables

}
