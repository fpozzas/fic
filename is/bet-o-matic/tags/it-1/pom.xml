<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>es.udc.betomatic</groupId>
    <artifactId>bet-o-matic</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0</version>
    <name>bet-o-matic</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <dependency>
	        <groupId>es.udc.pojo</groupId>
	        <artifactId>pojo-modelutil</artifactId>
	        <version>1.1.0</version>
        </dependency>
	    <dependency>
	        <groupId>junit</groupId>
	        <artifactId>junit</artifactId>
	        <version>4.4</version>
	        <scope>test</scope>
	    </dependency>
        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.3.1.GA</version>
        </dependency>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.6</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>2.5.6</version>
        </dependency>
        <!-- JDBC driver -->
        <dependency>
            <groupId>${jdbcDriver.groupId}</groupId>
            <artifactId>${jdbcDriver.artifactId}</artifactId>
            <version>${jdbcDriver.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <!--
         Default values for properties. These default values are expected
         to be valid for most profiles. Specific profiles can overwrite
         values when necessary.
      -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--  Data source properties -->
        <dataSource.user>pojo</dataSource.user>
        <dataSource.password>pojo</dataSource.password>
        <dataSource.jndiName>jdbc/pojo-betomatic-ds</dataSource.jndiName>
        <testDataSource.user>${dataSource.user}</testDataSource.user>
        <testDataSource.password>${dataSource.password}</testDataSource.password>

        <!-- Hibernate properties -->
        <hibernate.show_sql>true</hibernate.show_sql>
        <hibernate.format_sql>true</hibernate.format_sql>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>
    </properties>

    <!-- ========================================================== -->
    <!-- Profiles -->
    <profiles>
        <profile>
            <id>mysql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- JDBC driver properties -->
                <jdbcDriver.groupId>mysql</jdbcDriver.groupId>
                <jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
                <jdbcDriver.version>5.1.10</jdbcDriver.version>
                <jdbcDriver.className>com.mysql.jdbc.Driver</jdbcDriver.className>

                <!--  Data source properties -->
                <dataSource.url>jdbc:mysql://localhost/pojo</dataSource.url>
                <testDataSource.url>${dataSource.url}test</testDataSource.url>
                <dataSource.createTablesScript>MySQLCreateTables.sql</dataSource.createTablesScript>

                <!-- Hibernate properties -->
                <hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
            </properties>
        </profile>
    </profiles>

    <build>
	    <!-- Filtering -->
	    <resources>
	        <!--
		         Apply filtering to files matching the following expressions in
		         src/main/resources.
		      -->
	        <resource>
		        <directory>src/main/resources</directory>
		        <filtering>true</filtering>
		        <includes>
		            <include>hibernate-config.xml</include>
		            <include>spring-config.xml</include>
		        </includes>
	        </resource>
	        <!--
		         Continue considering resources the files in src/main/resources, but
		         Without applying filtering.
		      -->
	        <resource>
		        <directory>src/main/resources</directory>
	        </resource>
	    </resources>
	    <testResources>
	        <!--
		         Apply filtering to files matching the following expressions in
		         src/main/resources.
		      -->
	        <testResource>
		        <directory>src/test/resources</directory>
		        <filtering>true</filtering>
		        <includes>
		            <include>hibernate-config-test.xml</include>
		            <include>spring-config-test.xml</include>
		        </includes>
	        </testResource>
	        <!--
		         Continue considering resources the files in src/main/resources, but
		         Without applying filtering.
		      -->
	        <testResource>
                <directory>src/test/resources</directory>
	        </testResource>
	    </testResources>
	    <plugins>
	        <!-- Compiler configuration -->
	        <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-compiler-plugin</artifactId>
		        <configuration>
		            <verbose>true</verbose>
		            <source>1.6</source>
		            <target>1.6</target>
		            <encoding>UTF-8</encoding>
		        </configuration>
	        </plugin>
	        <plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>sql-maven-plugin</artifactId>
		        <dependencies>
		            <dependency>
			            <groupId>${jdbcDriver.groupId}</groupId>
			            <artifactId>${jdbcDriver.artifactId}</artifactId>
			            <version>${jdbcDriver.version}</version>
		            </dependency>
		        </dependencies>
		        <configuration>
		            <driver>${jdbcDriver.className}</driver>
		            <url>${dataSource.url}</url>
		            <username>${dataSource.user}</username>
		            <password>${dataSource.password}</password>
		            <autocommit>true</autocommit>
		            <onError>continue</onError>
		            <fileset>
			            <basedir>${basedir}</basedir>
			            <includes>
			                <include>
				                src/sql/${dataSource.createTablesScript}
			                </include>
			            </includes>
		            </fileset>
		        </configuration>
		        <executions>
		            <execution>
			            <id>create-tables-for-testing</id>
			            <phase>process-test-resources</phase>
			            <goals>
			                <goal>execute</goal>
			            </goals>
			            <configuration>
			                <driver>${jdbcDriver.className}</driver>
			                <url>${testDataSource.url}</url>
			                <username>${testDataSource.user}</username>
			                <password>${testDataSource.password}</password>
			                <autocommit>true</autocommit>
			                <onError>continue</onError>
			                <fileset>
				                <basedir>${basedir}</basedir>
				                <includes>
				                    <include>
					                    src/sql/${dataSource.createTablesScript}
				                    </include>
				                </includes>
			                </fileset>
			            </configuration>
		            </execution>
		        </executions>
	        </plugin>
	    </plugins>
    </build>

    
</project>
