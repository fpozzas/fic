<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="General" logWarningsWhenNoCategoriesMatch="true">
    <listeners>
      <add fileName="S:\Temp\Log\Betbook.log" header="" footer=""
           formatter="Simple Log Format" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
           traceOutputOptions="None" filter="All" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
           name="FlatFile TraceListener" />
    </listeners>
    <formatters>
      <add template="[{timestamp}] [{category}] ({severity}) - {message} "
           type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=4.1.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
           name="Simple Log Format" />
    </formatters>
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="FlatFile TraceListener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="FlatFile TraceListener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  
  <connectionStrings>
    <add name="BetbookEntitiesContainer"
         connectionString="metadata=res://*/Model1.csdl|res://*/Model1.ssdl|res://*/Model1.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=coto;Initial Catalog=PracticaIS;Integrated Security=True;MultipleActiveResultSets=True&quot;"
         providerName="System.Data.EntityClient" />
  </connectionStrings>
  
  <!-- Unity Configuration Block -->
  <unity>
    <typeAliases>
      <!-- <typeAlias alias="aliasName" type="Class FullName, Assembly Name" /> -->
      <typeAlias alias="ICommentDao"
                 type="Es.Udc.DotNet.Betbook.Model.CommentDao.ICommentDao, Betbook.Model" />
      <typeAlias alias="CommentDaoEntityFramework"
                 type="Es.Udc.DotNet.Betbook.Model.CommentDao.CommentDaoEntityFramework, Betbook.Model" />

      <typeAlias alias="IFavouriteDao"
                 type="Es.Udc.DotNet.Betbook.Model.FavouriteDao.IFavouriteDao, Betbook.Model" />
      <typeAlias alias="FavouriteDaoEntityFramework"
                 type="Es.Udc.DotNet.Betbook.Model.FavouriteDao.FavouriteDaoEntityFramework, Betbook.Model" />

      <typeAlias alias="IGroupDao"
                 type="Es.Udc.DotNet.Betbook.Model.GroupDao.IGroupDao, Betbook.Model" />
      <typeAlias alias="GroupDaoEntityFramework"
                 type="Es.Udc.DotNet.Betbook.Model.GroupDao.GroupDaoEntityFramework, Betbook.Model" />

      <typeAlias alias="IRecommendationDao"
                 type="Es.Udc.DotNet.Betbook.Model.RecommendationDao.IRecommendationDao, Betbook.Model" />
      <typeAlias alias="RecommendationDaoEntityFramework"
                 type="Es.Udc.DotNet.Betbook.Model.RecommendationDao.RecommendationDaoEntityFramework, Betbook.Model" />

      <typeAlias alias="ITagDao"
                 type="Es.Udc.DotNet.Betbook.Model.TagDao.ITagDao, Betbook.Model" />
      <typeAlias alias="TagDaoEntityFramework"
                 type="Es.Udc.DotNet.Betbook.Model.TagDao.TagDaoEntityFramework, Betbook.Model" />

      <typeAlias alias="IUserDao"
                 type="Es.Udc.DotNet.Betbook.Model.UserDao.IUserDao, Betbook.Model" />
      <typeAlias alias="UserDaoEntityFramework"
                 type="Es.Udc.DotNet.Betbook.Model.UserDao.UserDaoEntityFramework, Betbook.Model" />

      <typeAlias alias="IUserService"
                 type="Es.Udc.DotNet.Betbook.Model.UserService.IUserService, Betbook.Model" />
      <typeAlias alias="UserService"
                 type="Es.Udc.DotNet.Betbook.Model.UserService.UserService, Betbook.Model" />

      <typeAlias alias="ICommentService"
                 type="Es.Udc.DotNet.Betbook.Model.CommentService.ICommentService, Betbook.Model" />
      <typeAlias alias="CommentService"
                 type="Es.Udc.DotNet.Betbook.Model.CommentService.CommentService, Betbook.Model" />

      <typeAlias alias="IEventService"
                 type="Es.Udc.DotNet.Betbook.Model.EventService.IEventService, Betbook.Model" />
      <typeAlias alias="EventService"
                 type="Es.Udc.DotNet.Betbook.Model.EventService.EventService, Betbook.Model" />

      <typeAlias alias="IGroupService"
                 type="Es.Udc.DotNet.Betbook.Model.GroupService.IGroupService, Betbook.Model" />
      <typeAlias alias="GroupService"
                 type="Es.Udc.DotNet.Betbook.Model.GroupService.GroupService, Betbook.Model" />

      <typeAlias alias="IBetOMaticService"
                 type="Es.Udc.DotNet.Betbook.Model.BetOMaticService.IBetOMaticService, Betbook.Model" />
      <typeAlias alias="BetOMaticService"
                 type="Es.Udc.DotNet.Betbook.Model.BetOMaticService.BetOMaticService, Betbook.Model" />

      <typeAlias alias="InterfaceInterceptor"
                 type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception" />
      <typeAlias alias="ObjectContext"
                 type="System.Data.Objects.ObjectContext, System.Data.Entity" />
      <typeAlias alias="singleton"
                 type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    </typeAliases>
    <containers>
      <container>
        <types>
          <!-- ************   Mappings for Bussiness Objects ************* -->
          <!-- Object Context -->
          <type type="System.Data.Objects.ObjectContext, System.Data.Entity" mapTo="System.Data.Objects.ObjectContext, System.Data.Entity">
            <lifetime type="singleton" />
            <typeConfig extensionType="Microsoft.Practices.Unity.Configuration.TypeInjectionElement, Microsoft.Practices.Unity.Configuration">
              <constructor>
                <param name="connectionString" parameterType="System.String">
                  <value value="metadata=res://*/Model1.csdl|res://*/Model1.ssdl|res://*/Model1.msl;provider=System.Data.SqlClient;provider connection string=&quot;Data Source=coto;Initial Catalog=PracticaIS;Integrated Security=True;MultipleActiveResultSets=True&quot;" />
                </param>
              </constructor>
            </typeConfig>
          </type>
          <type type="ICommentDao" mapTo="CommentDaoEntityFramework"></type>
          <type type="IFavouriteDao" mapTo="FavouriteDaoEntityFramework"></type>
          <type type="IGroupDao" mapTo="GroupDaoEntityFramework"></type>
          <type type="IRecommendationDao" mapTo="RecommendationDaoEntityFramework"></type>
          <type type="ITagDao" mapTo="TagDaoEntityFramework"></type>
          <type type="IUserDao" mapTo="UserDaoEntityFramework"></type>
          <type type="IUserService" mapTo="UserService"></type>
          <type type="ICommentService" mapTo="CommentService"></type>
          <type type="IEventService" mapTo="EventService"></type>
          <type type="IGroupService" mapTo="GroupService"></type>
          <type type="IBetOMaticService" mapTo="BetOMaticService"></type>
        </types>
        <extensions>
          <add type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception" />
        </extensions>
        <!-- Interception schema for transactional methods -->
        <extensionConfig>
          <add name="TransactionalIntercepcion"
               type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationElement, Microsoft.Practices.Unity.Interception.Configuration">
            <interceptors>
              <interceptor type="InterfaceInterceptor">
                <key type="IUserService" />
                <key type="ICommentService" />
                <key type="IEventService" />
                <key type="IGroupService" />
                <key type="IBetOMaticService" />
              </interceptor>
            </interceptors>
          </add>
        </extensionConfig>
      </container>
    </containers>
  </unity>
</configuration>
  
  